// compile with:
//
//   protoc *.proto --go_out=plugins=grpc:.

syntax = "proto3";

package gmajpb;

// Chord is the service for inter-node communication.
// This has all the RPC functions needed to maintain
// a Chord cluster.
service Chord {
    rpc GetPredecessor(MT) returns (RemoteNode);
    rpc GetSuccessor(MT) returns (RemoteNode);
    rpc SetPredecessor(RemoteNode) returns (MT);
    rpc SetSuccessor(RemoteNode) returns (MT);
    rpc Notify(RemoteNode) returns (MT);
    rpc ClosestPrecedingFinger(ID) returns (RemoteNode);
    rpc FindSuccessor(ID) returns (RemoteNode);
    rpc Get(Key) returns (Val);
    rpc Put(KeyVal) returns (MT);
    rpc TransferKeys(TransferMsg) returns (MT);
}

// NodeAPI is for writing client applications that are
// completely agnostic of the Chord spec, but are aware
service NodeAPI {
    rpc Get(Key) returns (Val);
    rpc Put(KeyVal) returns (MT);
}

// MembershipServer maintains a list of nodes in the Chord cluster
// for client applications to be made aware of nodes on which to call
// Get and Put.
service MembershipServer {
    rpc AddNode(RemoteNode) returns (MT);
    rpc DelNode(RemoteNode) returns (MT);
    rpc GetNode(MT) returns (RemoteNode);
}

message Node {
    bytes id = 1;
    string addr = 2;
}

message TransferMsg {
    bytes fromID = 1;
    RemoteNode toNode = 2;
}

message MT {}

message KeyVal {
    string key = 1;
    string val = 2;
}

message ID {
    bytes id = 1;
}

message Key {
    string key = 1;
}

message Val {
    string val = 1;
}
